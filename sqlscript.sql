REM   Script: PRY2204_S8_SEMANA8
REM   nada

SHOW USER


BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE TEST_X'; 
EXCEPTION 
  WHEN OTHERS THEN NULL; 
END; 
/

CREATE TABLE TEST_X (ID NUMBER);

INSERT INTO TEST_X VALUES (1);

COMMIT;

SELECT * FROM TEST_X;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE TEST_X'; 
EXCEPTION WHEN OTHERS THEN NULL; 
END; 
/

BEGIN EXECUTE IMMEDIATE 'DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS'; EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE VENTA CASCADE CONSTRAINTS';        EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE VENDEDOR CASCADE CONSTRAINTS';     EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE EMPLEADO CASCADE CONSTRAINTS';     EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE PRODUCTO CASCADE CONSTRAINTS';     EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE PROVEEDOR CASCADE CONSTRAINTS';    EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE MARCA CASCADE CONSTRAINTS';        EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS';   EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE AFP CASCADE CONSTRAINTS';          EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE SALUD CASCADE CONSTRAINTS';        EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP TABLE REGION CASCADE CONSTRAINTS';       EXCEPTION WHEN OTHERS THEN NULL; END; / 
 
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_SALUD';    EXCEPTION WHEN OTHERS THEN NULL; END; / 
BEGIN EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_EMPLEADO'; EXCEPTION WHEN OTHERS THEN NULL; END; / 
 
CREATE TABLE REGION ( 
  ID_REGION NUMBER(4) PRIMARY KEY, 
  NOMBRE    VARCHAR2(60) NOT NULL, 
  CONSTRAINT UN_REGION_NOMBRE UNIQUE (NOMBRE) 
); 
 
CREATE TABLE MARCA ( 
  ID_MARCA NUMBER(6) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE   VARCHAR2(80) NOT NULL, 
  CONSTRAINT PK_MARCA PRIMARY KEY (ID_MARCA) 
); 
 
CREATE TABLE PROVEEDOR ( 
  ID_PROVEEDOR NUMBER(8) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE       VARCHAR2(120) NOT NULL, 
  CORREO       VARCHAR2(120), 
  TELEFONO     VARCHAR2(30), 
  ID_REGION    NUMBER(4), 
  CONSTRAINT PK_PROVEEDOR PRIMARY KEY (ID_PROVEEDOR), 
  CONSTRAINT FK_PROVEEDOR_REGION FOREIGN KEY (ID_REGION) REFERENCES REGION(ID_REGION) 
); 
 
CREATE TABLE PRODUCTO ( 
  ID_PRODUCTO   NUMBER(10) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE        VARCHAR2(120) NOT NULL, 
  ID_MARCA      NUMBER(6) NOT NULL, 
  CATEGORIA     VARCHAR2(60), 
  FORMATO       VARCHAR2(60), 
  ORIGEN        VARCHAR2(60), 
  PRECIO_COSTO  NUMBER(12,2), 
  PRECIO_VENTA  NUMBER(12,2), 
  STOCK         NUMBER(10) DEFAULT 0 NOT NULL, 
  STOCK_MIN     NUMBER(10) DEFAULT 0 NOT NULL, 
  CONSTRAINT PK_PRODUCTO PRIMARY KEY (ID_PRODUCTO), 
  CONSTRAINT FK_PRODUCTO_MARCA FOREIGN KEY (ID_MARCA) REFERENCES MARCA(ID_MARCA), 
  CONSTRAINT CK_PRODUCTO_PRECIOS CHECK ( 
    (PRECIO_COSTO IS NULL OR PRECIO_COSTO >= 0) AND 
    (PRECIO_VENTA IS NULL OR PRECIO_VENTA >= 0) 
  ), 
  CONSTRAINT CK_PRODUCTO_STOCK CHECK (STOCK >= 0 AND STOCK_MIN >= 0) 
); 
 
CREATE TABLE MEDIO_PAGO ( 
  ID_MEDIO_PAGO NUMBER(6) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE        VARCHAR2(60) NOT NULL, 
  CONSTRAINT PK_MEDIO_PAGO PRIMARY KEY (ID_MEDIO_PAGO), 
  CONSTRAINT UN_MEDIO_PAGO UNIQUE (NOMBRE) 
); 
 
CREATE TABLE AFP ( 
  ID_AFP NUMBER(6) GENERATED BY DEFAULT AS IDENTITY (START WITH 210 INCREMENT BY 6), 
  NOMBRE VARCHAR2(80) NOT NULL, 
  CONSTRAINT PK_AFP PRIMARY KEY (ID_AFP), 
  CONSTRAINT UN_AFP UNIQUE (NOMBRE) 
); 
 
CREATE TABLE SALUD ( 
  ID_SALUD NUMBER(10) PRIMARY KEY, 
  NOMBRE   VARCHAR2(80) NOT NULL, 
  CONSTRAINT UN_SALUD UNIQUE (NOMBRE) 
); 
 
CREATE TABLE EMPLEADO ( 
  ID_EMPLEADO       NUMBER(10) PRIMARY KEY, 
  RUT               VARCHAR2(15) NOT NULL, 
  NOMBRE            VARCHAR2(60) NOT NULL, 
  APELLIDO_PATERNO  VARCHAR2(60) NOT NULL, 
  APELLIDO_MATERNO  VARCHAR2(60), 
  FECHA_INGRESO     DATE NOT NULL, 
  ACTIVO            CHAR(1) DEFAULT 'S' NOT NULL, 
  SUELDO_BASE       NUMBER(12,2) NOT NULL, 
  BONO_JEFATURA     NUMBER(12,2), 
  ID_REGION         NUMBER(4), 
  ID_AFP            NUMBER(6), 
  ID_SALUD          NUMBER(10), 
  ID_JEFE           NUMBER(10), 
  CONSTRAINT UN_EMPLEADO_RUT UNIQUE (RUT), 
  CONSTRAINT FK_EMPLEADO_REGION FOREIGN KEY (ID_REGION) REFERENCES REGION(ID_REGION), 
  CONSTRAINT FK_EMPLEADO_AFP    FOREIGN KEY (ID_AFP)    REFERENCES AFP(ID_AFP), 
  CONSTRAINT FK_EMPLEADO_SALUD  FOREIGN KEY (ID_SALUD)  REFERENCES SALUD(ID_SALUD), 
  CONSTRAINT FK_EMPLEADO_JEFE   FOREIGN KEY (ID_JEFE)   REFERENCES EMPLEADO(ID_EMPLEADO), 
  CONSTRAINT CK_EMPLEADO_ACTIVO CHECK (ACTIVO IN ('S','N')) 
); 
 
CREATE TABLE VENDEDOR ( 
  ID_EMPLEADO NUMBER(10) PRIMARY KEY, 
  COMISION    NUMBER(5,4) DEFAULT 0 NOT NULL, 
  CONSTRAINT FK_VENDEDOR_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO) 
); 
 
CREATE TABLE VENTA ( 
  ID_VENTA      NUMBER(12) GENERATED BY DEFAULT AS IDENTITY (START WITH 5050 INCREMENT BY 3), 
  FECHA_VENTA   DATE DEFAULT SYSDATE NOT NULL, 
  ID_VENDEDOR   NUMBER(10) NOT NULL, 
  ID_MEDIO_PAGO NUMBER(6) NOT NULL, 
  TOTAL         NUMBER(14,2) DEFAULT 0 NOT NULL, 
  CONSTRAINT PK_VENTA PRIMARY KEY (ID_VENTA), 
  CONSTRAINT FK_VENTA_VENDEDOR FOREIGN KEY (ID_VENDEDOR)   REFERENCES VENDEDOR(ID_EMPLEADO), 
  CONSTRAINT FK_VENTA_MEDIO    FOREIGN KEY (ID_MEDIO_PAGO) REFERENCES MEDIO_PAGO(ID_MEDIO_PAGO), 
  CONSTRAINT CK_VENTA_TOTAL CHECK (TOTAL >= 0) 
); 
 
CREATE TABLE DETALLE_VENTA ( 
  ID_DETALLE      NUMBER(12) GENERATED BY DEFAULT AS IDENTITY, 
  ID_VENTA        NUMBER(12) NOT NULL, 
  ID_PRODUCTO     NUMBER(10) NOT NULL, 
  CANTIDAD        NUMBER(10) NOT NULL, 
  PRECIO_UNITARIO NUMBER(12,2) NOT NULL, 
  CONSTRAINT PK_DETALLE_VENTA PRIMARY KEY (ID_DETALLE), 
  CONSTRAINT FK_DET_VTA_VENTA    FOREIGN KEY (ID_VENTA)    REFERENCES VENTA(ID_VENTA), 
  CONSTRAINT FK_DET_VTA_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO), 
  CONSTRAINT CK_DETALLE_PRECIO CHECK (PRECIO_UNITARIO >= 0) 
); 
 
ALTER TABLE EMPLEADO  ADD CONSTRAINT CK_EMPLEADO_SUELDO_MIN CHECK (SUELDO_BASE >= 400000); 
ALTER TABLE VENDEDOR  ADD CONSTRAINT CK_VENDEDOR_COMISION   CHECK (COMISION >= 0 AND COMISION <= 0.25); 
ALTER TABLE PRODUCTO  ADD CONSTRAINT CK_PRODUCTO_STOCKMIN   CHECK (STOCK_MIN >= 3); 
ALTER TABLE PROVEEDOR ADD CONSTRAINT UN_PROVEEDOR_CORREO    UNIQUE (CORREO); 
ALTER TABLE MARCA     ADD CONSTRAINT UN_MARCA_NOMBRE        UNIQUE (NOMBRE); 
ALTER TABLE DETALLE_VENTA ADD CONSTRAINT CK_DETALLE_CANTIDAD CHECK (CANTIDAD > 0); 
 
CREATE SEQUENCE SEQ_SALUD    START WITH 2050 INCREMENT BY 10 NOCACHE; 
CREATE SEQUENCE SEQ_EMPLEADO START WITH 750  INCREMENT BY 3  NOCACHE; 
 
INSERT INTO REGION (ID_REGION, NOMBRE) VALUES (1,  'Arica y Parinacota'); 
INSERT INTO REGION (ID_REGION, NOMBRE) VALUES (2,  'Tarapacá'); 
INSERT INTO REGION (ID_REGION, NOMBRE) VALUES (13, 'Metropolitana'); 
 
INSERT INTO SALUD (ID_SALUD, NOMBRE) VALUES (SEQ_SALUD.NEXTVAL, 'Fonasa'); 
INSERT INTO SALUD (ID_SALUD, NOMBRE) VALUES (SEQ_SALUD.NEXTVAL, 'Cruz Blanca'); 
INSERT INTO SALUD (ID_SALUD, NOMBRE) VALUES (SEQ_SALUD.NEXTVAL, 'Colmena'); 
 
INSERT INTO AFP (NOMBRE) VALUES ('AFP Habitat'); 
INSERT INTO AFP (NOMBRE) VALUES ('AFP Provida'); 
INSERT INTO AFP (NOMBRE) VALUES ('AFP Modelo'); 
 
INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Efectivo'); 
INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Débito'); 
INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Crédito'); 
INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Transferencia'); 
 
INSERT INTO MARCA (NOMBRE) VALUES ('Los Alerces'); 
INSERT INTO MARCA (NOMBRE) VALUES ('La Sureña'); 
INSERT INTO MARCA (NOMBRE) VALUES ('Andes Fresh'); 
 
INSERT INTO PROVEEDOR (NOMBRE, CORREO, TELEFONO, ID_REGION) VALUES ('Distribuidora Sur Ltda.', 'contacto@distsur.cl', '9 1234 5678', 13); 
INSERT INTO PROVEEDOR (NOMBRE, CORREO, TELEFONO, ID_REGION) VALUES ('Abarrotes del Valle',     'ventas@valle.cl',      '9 8765 4321', 13); 
 
INSERT INTO PRODUCTO (NOMBRE, ID_MARCA, CATEGORIA, FORMATO, ORIGEN, PRECIO_COSTO, PRECIO_VENTA, STOCK, STOCK_MIN) 
VALUES ('Leche Entera 1L', 1, 'Lácteos', '1 Litro', 'Chile', 700,  990, 50, 5); 
INSERT INTO PRODUCTO (NOMBRE, ID_MARCA, CATEGORIA, FORMATO, ORIGEN, PRECIO_COSTO, PRECIO_VENTA, STOCK, STOCK_MIN) 
VALUES ('Azúcar 1Kg',      2, 'Abarrotes', '1 Kg',  'Chile', 900, 1190, 40, 3); 
INSERT INTO PRODUCTO (NOMBRE, ID_MARCA, CATEGORIA, FORMATO, ORIGEN, PRECIO_COSTO, PRECIO_VENTA, STOCK, STOCK_MIN) 
VALUES ('Detergente 3L',   3, 'Aseo', '3 Litros', 'Chile', 2500, 3490, 30, 4); 
 
INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, FECHA_INGRESO, ACTIVO, SUELDO_BASE, BONO_JEFATURA, ID_REGION, ID_AFP, ID_SALUD, ID_JEFE) 
SELECT SEQ_EMPLEADO.NEXTVAL, '12.345.678-9', 'Marta', 'González', 'Pérez', DATE '2020-03-01', 'S', 700000, 100000, 13, 
       (SELECT MIN(ID_AFP) FROM AFP), (SELECT MIN(ID_SALUD) FROM SALUD), NULL FROM DUAL; 
 
INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, FECHA_INGRESO, ACTIVO, SUELDO_BASE, BONO_JEFATURA, ID_REGION, ID_AFP, ID_SALUD, ID_JEFE) 
SELECT SEQ_EMPLEADO.NEXTVAL, '16.111.222-3', 'Juan', 'Muñoz', 'Rojas', DATE '2022-01-10', 'S', 550000, NULL, 13, 
       (SELECT MIN(ID_AFP) FROM AFP), (SELECT MIN(ID_SALUD) FROM SALUD), 
       (SELECT MIN(ID_EMPLEADO) FROM EMPLEADO) FROM DUAL; 
 
INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, FECHA_INGRESO, ACTIVO, SUELDO_BASE, BONO_JEFATURA, ID_REGION, ID_AFP, ID_SALUD, ID_JEFE) 
SELECT SEQ_EMPLEADO.NEXTVAL, '17.222.333-4', 'Carla', 'Pérez', 'Díaz', DATE '2023-05-15', 'S', 800000, 80000, 13, 
       (SELECT MAX(ID_AFP) FROM AFP), (SELECT MAX(ID_SALUD) FROM SALUD), 
       (SELECT MIN(ID_EMPLEADO) FROM EMPLEADO) FROM DUAL; 
 
INSERT INTO VENDEDOR (ID_EMPLEADO, COMISION) 
SELECT ID_EMPLEADO, 0.08 FROM EMPLEADO WHERE RUT = '16.111.222-3'; 
INSERT INTO VENDEDOR (ID_EMPLEADO, COMISION) 
SELECT ID_EMPLEADO, 0.10 FROM EMPLEADO WHERE RUT = '17.222.333-4'; 
 
INSERT INTO VENTA (FECHA_VENTA, ID_VENDEDOR, ID_MEDIO_PAGO, TOTAL) 
SELECT SYSDATE, 
       (SELECT ID_EMPLEADO FROM EMPLEADO WHERE RUT='16.111.222-3'), 
       (SELECT ID_MEDIO_PAGO FROM MEDIO_PAGO WHERE NOMBRE='Débito'), 
       0 FROM DUAL; 
 
INSERT INTO VENTA (FECHA_VENTA, ID_VENDEDOR, ID_MEDIO_PAGO, TOTAL) 
SELECT SYSDATE, 
       (SELECT ID_EMPLEADO FROM EMPLEADO WHERE RUT='17.222.333-4'), 
       (SELECT ID_MEDIO_PAGO FROM MEDIO_PAGO WHERE NOMBRE='Efectivo'), 
       0 FROM DUAL; 
 
INSERT INTO DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO) 
SELECT (SELECT MIN(ID_VENTA) FROM VENTA), 
       (SELECT ID_PRODUCTO FROM PRODUCTO WHERE NOMBRE='Leche Entera 1L'), 
       3, (SELECT PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE='Leche Entera 1L') FROM DUAL; 
 
INSERT INTO DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO) 
SELECT (SELECT MIN(ID_VENTA) FROM VENTA), 
       (SELECT ID_PRODUCTO FROM PRODUCTO WHERE NOMBRE='Azúcar 1Kg'), 
       2, (SELECT PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE='Azúcar 1Kg') FROM DUAL; 
 
INSERT INTO DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO) 
SELECT (SELECT MAX(ID_VENTA) FROM VENTA), 
       (SELECT ID_PRODUCTO FROM PRODUCTO WHERE NOMBRE='Detergente 3L'), 
       1, (SELECT PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE='Detergente 3L') FROM DUAL; 
 
UPDATE VENTA v 
SET v.TOTAL = ( 
  SELECT NVL(SUM(d.CANTIDAD * d.PRECIO_UNITARIO),0) 
  FROM DETALLE_VENTA d 
  WHERE d.ID_VENTA = v.ID_VENTA 
); 
 
COMMIT; 
 
SELECT 
  e.ID_EMPLEADO AS "IDENTIFICADOR", 
  (e.NOMBRE || ' ' || e.APELLIDO_PATERNO || ' ' || NVL(e.APELLIDO_MATERNO,'')) AS "NOMBRE COMPLETO", 
  e.SUELDO_BASE AS "SALARIO", 
  e.BONO_JEFATURA AS "BONIFICACION", 
  (e.SUELDO_BASE + e.BONO_JEFATURA) AS "SALARIO SIMULADO" 
FROM EMPLEADO e 
WHERE e.ACTIVO = 'S' AND e.BONO_JEFATURA IS NOT NULL 
ORDER BY "SALARIO SIMULADO" DESC, e.APELLIDO_PATERNO DESC; 
 
SELECT 
  (e.NOMBRE || ' ' || e.APELLIDO_PATERNO || ' ' || NVL(e.APELLIDO_MATERNO,'')) AS "EMPLEADO", 
  e.SUELDO_BASE AS "SUELDO", 
  0.08 AS "POSIBLE AUMENTO", 
  (e.SUELDO_BASE * 1.08) AS "SALARIO SIMULADO" 
FROM EMPLEADO e 
WHERE e.SUELDO_BASE BETWEEN 550000 AND 800000 
ORDER BY e.SUELDO_BASE ASC; 

/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE VENTA CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE VENDEDOR CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE EMPLEADO CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE PRODUCTO CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE PROVEEDOR CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE MARCA CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE AFP CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE SALUD CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE REGION CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_SALUD'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_EMPLEADO'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

CREATE TABLE REGION ( 
  ID_REGION NUMBER(4) PRIMARY KEY, 
  NOMBRE    VARCHAR2(60) NOT NULL, 
  CONSTRAINT UN_REGION_NOMBRE UNIQUE (NOMBRE) 
);

CREATE TABLE MARCA ( 
  ID_MARCA NUMBER(6) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE   VARCHAR2(80) NOT NULL, 
  CONSTRAINT PK_MARCA PRIMARY KEY (ID_MARCA) 
);

CREATE TABLE PROVEEDOR ( 
  ID_PROVEEDOR NUMBER(8) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE       VARCHAR2(120) NOT NULL, 
  CORREO       VARCHAR2(120), 
  TELEFONO     VARCHAR2(30), 
  ID_REGION    NUMBER(4), 
  CONSTRAINT PK_PROVEEDOR PRIMARY KEY (ID_PROVEEDOR), 
  CONSTRAINT FK_PROVEEDOR_REGION FOREIGN KEY (ID_REGION) REFERENCES REGION(ID_REGION) 
);

CREATE TABLE PRODUCTO ( 
  ID_PRODUCTO   NUMBER(10) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE        VARCHAR2(120) NOT NULL, 
  ID_MARCA      NUMBER(6) NOT NULL, 
  CATEGORIA     VARCHAR2(60), 
  FORMATO       VARCHAR2(60), 
  ORIGEN        VARCHAR2(60), 
  PRECIO_COSTO  NUMBER(12,2), 
  PRECIO_VENTA  NUMBER(12,2), 
  STOCK         NUMBER(10) DEFAULT 0 NOT NULL, 
  STOCK_MIN     NUMBER(10) DEFAULT 0 NOT NULL, 
  CONSTRAINT PK_PRODUCTO PRIMARY KEY (ID_PRODUCTO), 
  CONSTRAINT FK_PRODUCTO_MARCA FOREIGN KEY (ID_MARCA) REFERENCES MARCA(ID_MARCA), 
  CONSTRAINT CK_PRODUCTO_PRECIOS CHECK ( 
    (PRECIO_COSTO IS NULL OR PRECIO_COSTO >= 0) AND 
    (PRECIO_VENTA IS NULL OR PRECIO_VENTA >= 0) 
  ), 
  CONSTRAINT CK_PRODUCTO_STOCK CHECK (STOCK >= 0 AND STOCK_MIN >= 0) 
);

CREATE TABLE MEDIO_PAGO ( 
  ID_MEDIO_PAGO NUMBER(6) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE        VARCHAR2(60) NOT NULL, 
  CONSTRAINT PK_MEDIO_PAGO PRIMARY KEY (ID_MEDIO_PAGO), 
  CONSTRAINT UN_MEDIO_PAGO UNIQUE (NOMBRE) 
);

CREATE TABLE AFP ( 
  ID_AFP NUMBER(6) GENERATED BY DEFAULT AS IDENTITY (START WITH 210 INCREMENT BY 6), 
  NOMBRE VARCHAR2(80) NOT NULL, 
  CONSTRAINT PK_AFP PRIMARY KEY (ID_AFP), 
  CONSTRAINT UN_AFP UNIQUE (NOMBRE) 
);

CREATE TABLE SALUD ( 
  ID_SALUD NUMBER(10) PRIMARY KEY, 
  NOMBRE   VARCHAR2(80) NOT NULL, 
  CONSTRAINT UN_SALUD UNIQUE (NOMBRE) 
);

CREATE TABLE EMPLEADO ( 
  ID_EMPLEADO       NUMBER(10) PRIMARY KEY, 
  RUT               VARCHAR2(15) NOT NULL, 
  NOMBRE            VARCHAR2(60) NOT NULL, 
  APELLIDO_PATERNO  VARCHAR2(60) NOT NULL, 
  APELLIDO_MATERNO  VARCHAR2(60), 
  FECHA_INGRESO     DATE NOT NULL, 
  ACTIVO            CHAR(1) DEFAULT 'S' NOT NULL, 
  SUELDO_BASE       NUMBER(12,2) NOT NULL, 
  BONO_JEFATURA     NUMBER(12,2), 
  ID_REGION         NUMBER(4), 
  ID_AFP            NUMBER(6), 
  ID_SALUD          NUMBER(10), 
  ID_JEFE           NUMBER(10), 
  CONSTRAINT UN_EMPLEADO_RUT UNIQUE (RUT), 
  CONSTRAINT FK_EMPLEADO_REGION FOREIGN KEY (ID_REGION) REFERENCES REGION(ID_REGION), 
  CONSTRAINT FK_EMPLEADO_AFP    FOREIGN KEY (ID_AFP)    REFERENCES AFP(ID_AFP), 
  CONSTRAINT FK_EMPLEADO_SALUD  FOREIGN KEY (ID_SALUD)  REFERENCES SALUD(ID_SALUD), 
  CONSTRAINT FK_EMPLEADO_JEFE   FOREIGN KEY (ID_JEFE)   REFERENCES EMPLEADO(ID_EMPLEADO), 
  CONSTRAINT CK_EMPLEADO_ACTIVO CHECK (ACTIVO IN ('S','N')) 
);

CREATE TABLE VENDEDOR ( 
  ID_EMPLEADO NUMBER(10) PRIMARY KEY, 
  COMISION    NUMBER(5,4) DEFAULT 0 NOT NULL, 
  CONSTRAINT FK_VENDEDOR_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO) 
);

CREATE TABLE VENTA ( 
  ID_VENTA      NUMBER(12) GENERATED BY DEFAULT AS IDENTITY (START WITH 5050 INCREMENT BY 3), 
  FECHA_VENTA   DATE DEFAULT SYSDATE NOT NULL, 
  ID_VENDEDOR   NUMBER(10) NOT NULL, 
  ID_MEDIO_PAGO NUMBER(6) NOT NULL, 
  TOTAL         NUMBER(14,2) DEFAULT 0 NOT NULL, 
  CONSTRAINT PK_VENTA PRIMARY KEY (ID_VENTA), 
  CONSTRAINT FK_VENTA_VENDEDOR FOREIGN KEY (ID_VENDEDOR)   REFERENCES VENDEDOR(ID_EMPLEADO), 
  CONSTRAINT FK_VENTA_MEDIO    FOREIGN KEY (ID_MEDIO_PAGO) REFERENCES MEDIO_PAGO(ID_MEDIO_PAGO), 
  CONSTRAINT CK_VENTA_TOTAL CHECK (TOTAL >= 0) 
);

CREATE TABLE DETALLE_VENTA ( 
  ID_DETALLE      NUMBER(12) GENERATED BY DEFAULT AS IDENTITY, 
  ID_VENTA        NUMBER(12) NOT NULL, 
  ID_PRODUCTO     NUMBER(10) NOT NULL, 
  CANTIDAD        NUMBER(10) NOT NULL, 
  PRECIO_UNITARIO NUMBER(12,2) NOT NULL, 
  CONSTRAINT PK_DETALLE_VENTA PRIMARY KEY (ID_DETALLE), 
  CONSTRAINT FK_DET_VTA_VENTA    FOREIGN KEY (ID_VENTA)    REFERENCES VENTA(ID_VENTA), 
  CONSTRAINT FK_DET_VTA_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO), 
  CONSTRAINT CK_DETALLE_PRECIO CHECK (PRECIO_UNITARIO >= 0) 
);

ALTER TABLE EMPLEADO      ADD CONSTRAINT CK_EMPLEADO_SUELDO_MIN CHECK (SUELDO_BASE >= 400000);

ALTER TABLE VENDEDOR      ADD CONSTRAINT CK_VENDEDOR_COMISION   CHECK (COMISION >= 0 AND COMISION <= 0.25);

ALTER TABLE PRODUCTO      ADD CONSTRAINT CK_PRODUCTO_STOCKMIN   CHECK (STOCK_MIN >= 3);

ALTER TABLE PROVEEDOR     ADD CONSTRAINT UN_PROVEEDOR_CORREO    UNIQUE (CORREO);

ALTER TABLE MARCA         ADD CONSTRAINT UN_MARCA_NOMBRE        UNIQUE (NOMBRE);

ALTER TABLE DETALLE_VENTA ADD CONSTRAINT CK_DETALLE_CANTIDAD    CHECK (CANTIDAD > 0);

CREATE SEQUENCE SEQ_SALUD    START WITH 2050 INCREMENT BY 10 NOCACHE;

CREATE SEQUENCE SEQ_EMPLEADO START WITH 750  INCREMENT BY 3  NOCACHE;

INSERT INTO REGION (ID_REGION, NOMBRE) VALUES (1,  'Arica y Parinacota');

INSERT INTO REGION (ID_REGION, NOMBRE) VALUES (2,  'Tarapacá');

INSERT INTO REGION (ID_REGION, NOMBRE) VALUES (13, 'Metropolitana');

INSERT INTO SALUD (ID_SALUD, NOMBRE) VALUES (SEQ_SALUD.NEXTVAL, 'Fonasa');

INSERT INTO SALUD (ID_SALUD, NOMBRE) VALUES (SEQ_SALUD.NEXTVAL, 'Cruz Blanca');

INSERT INTO SALUD (ID_SALUD, NOMBRE) VALUES (SEQ_SALUD.NEXTVAL, 'Colmena');

INSERT INTO AFP (NOMBRE) VALUES ('AFP Habitat');

INSERT INTO AFP (NOMBRE) VALUES ('AFP Provida');

INSERT INTO AFP (NOMBRE) VALUES ('AFP Modelo');

INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Efectivo');

INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Débito');

INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Crédito');

INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Transferencia');

INSERT INTO MARCA (NOMBRE) VALUES ('Los Alerces');

INSERT INTO MARCA (NOMBRE) VALUES ('La Sureña');

INSERT INTO MARCA (NOMBRE) VALUES ('Andes Fresh');

INSERT INTO PROVEEDOR (NOMBRE, CORREO, TELEFONO, ID_REGION) VALUES ('Distribuidora Sur Ltda.', 'contacto@distsur.cl', '9 1234 5678', 13);

INSERT INTO PROVEEDOR (NOMBRE, CORREO, TELEFONO, ID_REGION) VALUES ('Abarrotes del Valle',     'ventas@valle.cl',      '9 8765 4321', 13);

INSERT INTO PRODUCTO (NOMBRE, ID_MARCA, CATEGORIA, FORMATO, ORIGEN, PRECIO_COSTO, PRECIO_VENTA, STOCK, STOCK_MIN) 
VALUES ('Leche Entera 1L', 1, 'Lácteos', '1 Litro', 'Chile', 700,  990, 50, 5);

INSERT INTO PRODUCTO (NOMBRE, ID_MARCA, CATEGORIA, FORMATO, ORIGEN, PRECIO_COSTO, PRECIO_VENTA, STOCK, STOCK_MIN) 
VALUES ('Azúcar 1Kg',      2, 'Abarrotes', '1 Kg',  'Chile', 900, 1190, 40, 3);

INSERT INTO PRODUCTO (NOMBRE, ID_MARCA, CATEGORIA, FORMATO, ORIGEN, PRECIO_COSTO, PRECIO_VENTA, STOCK, STOCK_MIN) 
VALUES ('Detergente 3L',   3, 'Aseo', '3 Litros', 'Chile', 2500, 3490, 30, 4);

INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, FECHA_INGRESO, ACTIVO, SUELDO_BASE, BONO_JEFATURA, ID_REGION, ID_AFP, ID_SALUD, ID_JEFE) 
SELECT SEQ_EMPLEADO.NEXTVAL, '12.345.678-9', 'Marta', 'González', 'Pérez', DATE '2020-03-01', 'S', 700000, 100000, 13, 
       (SELECT MIN(ID_AFP) FROM AFP), (SELECT MIN(ID_SALUD) FROM SALUD), NULL FROM DUAL;

INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, FECHA_INGRESO, ACTIVO, SUELDO_BASE, BONO_JEFATURA, ID_REGION, ID_AFP, ID_SALUD, ID_JEFE) 
SELECT SEQ_EMPLEADO.NEXTVAL, '16.111.222-3', 'Juan', 'Muñoz', 'Rojas', DATE '2022-01-10', 'S', 550000, NULL, 13, 
       (SELECT MIN(ID_AFP) FROM AFP), (SELECT MIN(ID_SALUD) FROM SALUD), 
       (SELECT MIN(ID_EMPLEADO) FROM EMPLEADO) FROM DUAL;

INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, FECHA_INGRESO, ACTIVO, SUELDO_BASE, BONO_JEFATURA, ID_REGION, ID_AFP, ID_SALUD, ID_JEFE) 
SELECT SEQ_EMPLEADO.NEXTVAL, '17.222.333-4', 'Carla', 'Pérez', 'Díaz', DATE '2023-05-15', 'S', 800000, 80000, 13, 
       (SELECT MAX(ID_AFP) FROM AFP), (SELECT MAX(ID_SALUD) FROM SALUD), 
       (SELECT MIN(ID_EMPLEADO) FROM EMPLEADO) FROM DUAL;

INSERT INTO VENDEDOR (ID_EMPLEADO, COMISION) 
SELECT ID_EMPLEADO, 0.08 FROM EMPLEADO WHERE RUT = '16.111.222-3';

INSERT INTO VENDEDOR (ID_EMPLEADO, COMISION) 
SELECT ID_EMPLEADO, 0.10 FROM EMPLEADO WHERE RUT = '17.222.333-4';

INSERT INTO VENTA (FECHA_VENTA, ID_VENDEDOR, ID_MEDIO_PAGO, TOTAL) 
SELECT SYSDATE, 
       (SELECT ID_EMPLEADO FROM EMPLEADO WHERE RUT='16.111.222-3'), 
       (SELECT ID_MEDIO_PAGO FROM MEDIO_PAGO WHERE NOMBRE='Débito'), 
       0 FROM DUAL;

INSERT INTO VENTA (FECHA_VENTA, ID_VENDEDOR, ID_MEDIO_PAGO, TOTAL) 
SELECT SYSDATE, 
       (SELECT ID_EMPLEADO FROM EMPLEADO WHERE RUT='17.222.333-4'), 
       (SELECT ID_MEDIO_PAGO FROM MEDIO_PAGO WHERE NOMBRE='Efectivo'), 
       0 FROM DUAL;

INSERT INTO DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO) 
SELECT (SELECT MIN(ID_VENTA) FROM VENTA), 
       (SELECT ID_PRODUCTO FROM PRODUCTO WHERE NOMBRE='Leche Entera 1L'), 
       3, (SELECT PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE='Leche Entera 1L') FROM DUAL;

INSERT INTO DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO) 
SELECT (SELECT MIN(ID_VENTA) FROM VENTA), 
       (SELECT ID_PRODUCTO FROM PRODUCTO WHERE NOMBRE='Azúcar 1Kg'), 
       2, (SELECT PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE='Azúcar 1Kg') FROM DUAL;

INSERT INTO DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO) 
SELECT (SELECT MAX(ID_VENTA) FROM VENTA), 
       (SELECT ID_PRODUCTO FROM PRODUCTO WHERE NOMBRE='Detergente 3L'), 
       1, (SELECT PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE='Detergente 3L') FROM DUAL;

UPDATE VENTA v 
SET v.TOTAL = ( 
  SELECT NVL(SUM(d.CANTIDAD * d.PRECIO_UNITARIO),0) 
  FROM DETALLE_VENTA d 
  WHERE d.ID_VENTA = v.ID_VENTA 
);

COMMIT;

SELECT 
  e.ID_EMPLEADO AS "IDENTIFICADOR", 
  (e.NOMBRE || ' ' || e.APELLIDO_PATERNO || ' ' || NVL(e.APELLIDO_MATERNO,'')) AS "NOMBRE COMPLETO", 
  e.SUELDO_BASE AS "SALARIO", 
  e.BONO_JEFATURA AS "BONIFICACION", 
  (e.SUELDO_BASE + e.BONO_JEFATURA) AS "SALARIO SIMULADO" 
FROM EMPLEADO e 
WHERE e.ACTIVO = 'S' AND e.BONO_JEFATURA IS NOT NULL 
ORDER BY "SALARIO SIMULADO" DESC, e.APELLIDO_PATERNO DESC;

SELECT 
  (e.NOMBRE || ' ' || e.APELLIDO_PATERNO || ' ' || NVL(e.APELLIDO_MATERNO,'')) AS "EMPLEADO", 
  e.SUELDO_BASE AS "SUELDO", 
  0.08 AS "POSIBLE AUMENTO", 
  (e.SUELDO_BASE * 1.08) AS "SALARIO SIMULADO" 
FROM EMPLEADO e 
WHERE e.SUELDO_BASE BETWEEN 550000 AND 800000 
ORDER BY e.SUELDO_BASE ASC;

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE DETALLE_VENTA CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE VENTA CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE VENDEDOR CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE EMPLEADO CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE PRODUCTO CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE PROVEEDOR CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE MARCA CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE MEDIO_PAGO CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE AFP CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE SALUD CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP TABLE REGION CASCADE CONSTRAINTS'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_SALUD'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

BEGIN 
  EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_EMPLEADO'; 
EXCEPTION WHEN OTHERS THEN NULL; END; 
/

CREATE TABLE REGION ( 
  ID_REGION NUMBER(4) PRIMARY KEY, 
  NOMBRE    VARCHAR2(60) NOT NULL, 
  CONSTRAINT UN_REGION_NOMBRE UNIQUE (NOMBRE) 
);

CREATE TABLE MARCA ( 
  ID_MARCA NUMBER(6) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE   VARCHAR2(80) NOT NULL, 
  CONSTRAINT PK_MARCA PRIMARY KEY (ID_MARCA) 
);

CREATE TABLE PROVEEDOR ( 
  ID_PROVEEDOR NUMBER(8) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE       VARCHAR2(120) NOT NULL, 
  CORREO       VARCHAR2(120), 
  TELEFONO     VARCHAR2(30), 
  ID_REGION    NUMBER(4), 
  CONSTRAINT PK_PROVEEDOR PRIMARY KEY (ID_PROVEEDOR), 
  CONSTRAINT FK_PROVEEDOR_REGION FOREIGN KEY (ID_REGION) REFERENCES REGION(ID_REGION) 
);

CREATE TABLE PRODUCTO ( 
  ID_PRODUCTO   NUMBER(10) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE        VARCHAR2(120) NOT NULL, 
  ID_MARCA      NUMBER(6) NOT NULL, 
  CATEGORIA     VARCHAR2(60), 
  FORMATO       VARCHAR2(60), 
  ORIGEN        VARCHAR2(60), 
  PRECIO_COSTO  NUMBER(12,2), 
  PRECIO_VENTA  NUMBER(12,2), 
  STOCK         NUMBER(10) DEFAULT 0 NOT NULL, 
  STOCK_MIN     NUMBER(10) DEFAULT 0 NOT NULL, 
  CONSTRAINT PK_PRODUCTO PRIMARY KEY (ID_PRODUCTO), 
  CONSTRAINT FK_PRODUCTO_MARCA FOREIGN KEY (ID_MARCA) REFERENCES MARCA(ID_MARCA), 
  CONSTRAINT CK_PRODUCTO_PRECIOS CHECK ( 
    (PRECIO_COSTO IS NULL OR PRECIO_COSTO >= 0) AND 
    (PRECIO_VENTA IS NULL OR PRECIO_VENTA >= 0) 
  ), 
  CONSTRAINT CK_PRODUCTO_STOCK CHECK (STOCK >= 0 AND STOCK_MIN >= 0) 
);

CREATE TABLE MEDIO_PAGO ( 
  ID_MEDIO_PAGO NUMBER(6) GENERATED BY DEFAULT AS IDENTITY, 
  NOMBRE        VARCHAR2(60) NOT NULL, 
  CONSTRAINT PK_MEDIO_PAGO PRIMARY KEY (ID_MEDIO_PAGO), 
  CONSTRAINT UN_MEDIO_PAGO UNIQUE (NOMBRE) 
);

CREATE TABLE AFP ( 
  ID_AFP NUMBER(6) GENERATED BY DEFAULT AS IDENTITY (START WITH 210 INCREMENT BY 6), 
  NOMBRE VARCHAR2(80) NOT NULL, 
  CONSTRAINT PK_AFP PRIMARY KEY (ID_AFP), 
  CONSTRAINT UN_AFP UNIQUE (NOMBRE) 
);

CREATE TABLE SALUD ( 
  ID_SALUD NUMBER(10) PRIMARY KEY, 
  NOMBRE   VARCHAR2(80) NOT NULL, 
  CONSTRAINT UN_SALUD UNIQUE (NOMBRE) 
);

CREATE TABLE EMPLEADO ( 
  ID_EMPLEADO       NUMBER(10) PRIMARY KEY, 
  RUT               VARCHAR2(15) NOT NULL, 
  NOMBRE            VARCHAR2(60) NOT NULL, 
  APELLIDO_PATERNO  VARCHAR2(60) NOT NULL, 
  APELLIDO_MATERNO  VARCHAR2(60), 
  FECHA_INGRESO     DATE NOT NULL, 
  ACTIVO            CHAR(1) DEFAULT 'S' NOT NULL, 
  SUELDO_BASE       NUMBER(12,2) NOT NULL, 
  BONO_JEFATURA     NUMBER(12,2), 
  ID_REGION         NUMBER(4), 
  ID_AFP            NUMBER(6), 
  ID_SALUD          NUMBER(10), 
  ID_JEFE           NUMBER(10), 
  CONSTRAINT UN_EMPLEADO_RUT UNIQUE (RUT), 
  CONSTRAINT FK_EMPLEADO_REGION FOREIGN KEY (ID_REGION) REFERENCES REGION(ID_REGION), 
  CONSTRAINT FK_EMPLEADO_AFP    FOREIGN KEY (ID_AFP)    REFERENCES AFP(ID_AFP), 
  CONSTRAINT FK_EMPLEADO_SALUD  FOREIGN KEY (ID_SALUD)  REFERENCES SALUD(ID_SALUD), 
  CONSTRAINT FK_EMPLEADO_JEFE   FOREIGN KEY (ID_JEFE)   REFERENCES EMPLEADO(ID_EMPLEADO), 
  CONSTRAINT CK_EMPLEADO_ACTIVO CHECK (ACTIVO IN ('S','N')) 
);

CREATE TABLE VENDEDOR ( 
  ID_EMPLEADO NUMBER(10) PRIMARY KEY, 
  COMISION    NUMBER(5,4) DEFAULT 0 NOT NULL, 
  CONSTRAINT FK_VENDEDOR_EMPLEADO FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO) 
);

CREATE TABLE VENTA ( 
  ID_VENTA      NUMBER(12) GENERATED BY DEFAULT AS IDENTITY (START WITH 5050 INCREMENT BY 3), 
  FECHA_VENTA   DATE DEFAULT SYSDATE NOT NULL, 
  ID_VENDEDOR   NUMBER(10) NOT NULL, 
  ID_MEDIO_PAGO NUMBER(6) NOT NULL, 
  TOTAL         NUMBER(14,2) DEFAULT 0 NOT NULL, 
  CONSTRAINT PK_VENTA PRIMARY KEY (ID_VENTA), 
  CONSTRAINT FK_VENTA_VENDEDOR FOREIGN KEY (ID_VENDEDOR)   REFERENCES VENDEDOR(ID_EMPLEADO), 
  CONSTRAINT FK_VENTA_MEDIO    FOREIGN KEY (ID_MEDIO_PAGO) REFERENCES MEDIO_PAGO(ID_MEDIO_PAGO), 
  CONSTRAINT CK_VENTA_TOTAL CHECK (TOTAL >= 0) 
);

CREATE TABLE DETALLE_VENTA ( 
  ID_DETALLE      NUMBER(12) GENERATED BY DEFAULT AS IDENTITY, 
  ID_VENTA        NUMBER(12) NOT NULL, 
  ID_PRODUCTO     NUMBER(10) NOT NULL, 
  CANTIDAD        NUMBER(10) NOT NULL, 
  PRECIO_UNITARIO NUMBER(12,2) NOT NULL, 
  CONSTRAINT PK_DETALLE_VENTA PRIMARY KEY (ID_DETALLE), 
  CONSTRAINT FK_DET_VTA_VENTA    FOREIGN KEY (ID_VENTA)    REFERENCES VENTA(ID_VENTA), 
  CONSTRAINT FK_DET_VTA_PRODUCTO FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO(ID_PRODUCTO), 
  CONSTRAINT CK_DETALLE_PRECIO CHECK (PRECIO_UNITARIO >= 0) 
);

ALTER TABLE EMPLEADO      ADD CONSTRAINT CK_EMPLEADO_SUELDO_MIN CHECK (SUELDO_BASE >= 400000);

ALTER TABLE VENDEDOR      ADD CONSTRAINT CK_VENDEDOR_COMISION   CHECK (COMISION >= 0 AND COMISION <= 0.25);

ALTER TABLE PRODUCTO      ADD CONSTRAINT CK_PRODUCTO_STOCKMIN   CHECK (STOCK_MIN >= 3);

ALTER TABLE PROVEEDOR     ADD CONSTRAINT UN_PROVEEDOR_CORREO    UNIQUE (CORREO);

ALTER TABLE MARCA         ADD CONSTRAINT UN_MARCA_NOMBRE        UNIQUE (NOMBRE);

ALTER TABLE DETALLE_VENTA ADD CONSTRAINT CK_DETALLE_CANTIDAD    CHECK (CANTIDAD > 0);

CREATE SEQUENCE SEQ_SALUD    START WITH 2050 INCREMENT BY 10 NOCACHE;

CREATE SEQUENCE SEQ_EMPLEADO START WITH 750  INCREMENT BY 3  NOCACHE;

INSERT INTO REGION (ID_REGION, NOMBRE) VALUES (1,  'Arica y Parinacota');

INSERT INTO REGION (ID_REGION, NOMBRE) VALUES (2,  'Tarapacá');

INSERT INTO REGION (ID_REGION, NOMBRE) VALUES (13, 'Metropolitana');

INSERT INTO SALUD (ID_SALUD, NOMBRE) VALUES (SEQ_SALUD.NEXTVAL, 'Fonasa');

INSERT INTO SALUD (ID_SALUD, NOMBRE) VALUES (SEQ_SALUD.NEXTVAL, 'Cruz Blanca');

INSERT INTO SALUD (ID_SALUD, NOMBRE) VALUES (SEQ_SALUD.NEXTVAL, 'Colmena');

INSERT INTO AFP (NOMBRE) VALUES ('AFP Habitat');

INSERT INTO AFP (NOMBRE) VALUES ('AFP Provida');

INSERT INTO AFP (NOMBRE) VALUES ('AFP Modelo');

INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Efectivo');

INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Débito');

INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Crédito');

INSERT INTO MEDIO_PAGO (NOMBRE) VALUES ('Transferencia');

INSERT INTO MARCA (NOMBRE) VALUES ('Los Alerces');

INSERT INTO MARCA (NOMBRE) VALUES ('La Sureña');

INSERT INTO MARCA (NOMBRE) VALUES ('Andes Fresh');

INSERT INTO PROVEEDOR (NOMBRE, CORREO, TELEFONO, ID_REGION) VALUES ('Distribuidora Sur Ltda.', 'contacto@distsur.cl', '9 1234 5678', 13);

INSERT INTO PROVEEDOR (NOMBRE, CORREO, TELEFONO, ID_REGION) VALUES ('Abarrotes del Valle',     'ventas@valle.cl',      '9 8765 4321', 13);

INSERT INTO PRODUCTO (NOMBRE, ID_MARCA, CATEGORIA, FORMATO, ORIGEN, PRECIO_COSTO, PRECIO_VENTA, STOCK, STOCK_MIN) 
VALUES ('Leche Entera 1L', 1, 'Lácteos', '1 Litro', 'Chile', 700,  990, 50, 5);

INSERT INTO PRODUCTO (NOMBRE, ID_MARCA, CATEGORIA, FORMATO, ORIGEN, PRECIO_COSTO, PRECIO_VENTA, STOCK, STOCK_MIN) 
VALUES ('Azúcar 1Kg',      2, 'Abarrotes', '1 Kg',  'Chile', 900, 1190, 40, 3);

INSERT INTO PRODUCTO (NOMBRE, ID_MARCA, CATEGORIA, FORMATO, ORIGEN, PRECIO_COSTO, PRECIO_VENTA, STOCK, STOCK_MIN) 
VALUES ('Detergente 3L',   3, 'Aseo', '3 Litros', 'Chile', 2500, 3490, 30, 4);

INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, FECHA_INGRESO, ACTIVO, SUELDO_BASE, BONO_JEFATURA, ID_REGION, ID_AFP, ID_SALUD, ID_JEFE) 
SELECT SEQ_EMPLEADO.NEXTVAL, '12.345.678-9', 'Marta', 'González', 'Pérez', DATE '2020-03-01', 'S', 700000, 100000, 13, 
       (SELECT MIN(ID_AFP) FROM AFP), (SELECT MIN(ID_SALUD) FROM SALUD), NULL FROM DUAL;

INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, FECHA_INGRESO, ACTIVO, SUELDO_BASE, BONO_JEFATURA, ID_REGION, ID_AFP, ID_SALUD, ID_JEFE) 
SELECT SEQ_EMPLEADO.NEXTVAL, '16.111.222-3', 'Juan', 'Muñoz', 'Rojas', DATE '2022-01-10', 'S', 550000, NULL, 13, 
       (SELECT MIN(ID_AFP) FROM AFP), (SELECT MIN(ID_SALUD) FROM SALUD), 
       (SELECT MIN(ID_EMPLEADO) FROM EMPLEADO) FROM DUAL;

INSERT INTO EMPLEADO (ID_EMPLEADO, RUT, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, FECHA_INGRESO, ACTIVO, SUELDO_BASE, BONO_JEFATURA, ID_REGION, ID_AFP, ID_SALUD, ID_JEFE) 
SELECT SEQ_EMPLEADO.NEXTVAL, '17.222.333-4', 'Carla', 'Pérez', 'Díaz', DATE '2023-05-15', 'S', 800000, 80000, 13, 
       (SELECT MAX(ID_AFP) FROM AFP), (SELECT MAX(ID_SALUD) FROM SALUD), 
       (SELECT MIN(ID_EMPLEADO) FROM EMPLEADO) FROM DUAL;

INSERT INTO VENDEDOR (ID_EMPLEADO, COMISION) 
SELECT ID_EMPLEADO, 0.08 FROM EMPLEADO WHERE RUT = '16.111.222-3';

INSERT INTO VENDEDOR (ID_EMPLEADO, COMISION) 
SELECT ID_EMPLEADO, 0.10 FROM EMPLEADO WHERE RUT = '17.222.333-4';

INSERT INTO VENTA (FECHA_VENTA, ID_VENDEDOR, ID_MEDIO_PAGO, TOTAL) 
SELECT SYSDATE, 
       (SELECT ID_EMPLEADO FROM EMPLEADO WHERE RUT='16.111.222-3'), 
       (SELECT ID_MEDIO_PAGO FROM MEDIO_PAGO WHERE NOMBRE='Débito'), 
       0 FROM DUAL;

INSERT INTO VENTA (FECHA_VENTA, ID_VENDEDOR, ID_MEDIO_PAGO, TOTAL) 
SELECT SYSDATE, 
       (SELECT ID_EMPLEADO FROM EMPLEADO WHERE RUT='17.222.333-4'), 
       (SELECT ID_MEDIO_PAGO FROM MEDIO_PAGO WHERE NOMBRE='Efectivo'), 
       0 FROM DUAL;

INSERT INTO DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO) 
SELECT (SELECT MIN(ID_VENTA) FROM VENTA), 
       (SELECT ID_PRODUCTO FROM PRODUCTO WHERE NOMBRE='Leche Entera 1L'), 
       3, (SELECT PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE='Leche Entera 1L') FROM DUAL;

INSERT INTO DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO) 
SELECT (SELECT MIN(ID_VENTA) FROM VENTA), 
       (SELECT ID_PRODUCTO FROM PRODUCTO WHERE NOMBRE='Azúcar 1Kg'), 
       2, (SELECT PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE='Azúcar 1Kg') FROM DUAL;

INSERT INTO DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, PRECIO_UNITARIO) 
SELECT (SELECT MAX(ID_VENTA) FROM VENTA), 
       (SELECT ID_PRODUCTO FROM PRODUCTO WHERE NOMBRE='Detergente 3L'), 
       1, (SELECT PRECIO_VENTA FROM PRODUCTO WHERE NOMBRE='Detergente 3L') FROM DUAL;

UPDATE VENTA v 
SET v.TOTAL = ( 
  SELECT NVL(SUM(d.CANTIDAD * d.PRECIO_UNITARIO),0) 
  FROM DETALLE_VENTA d 
  WHERE d.ID_VENTA = v.ID_VENTA 
);

COMMIT;

SELECT 
  e.ID_EMPLEADO AS "IDENTIFICADOR", 
  (e.NOMBRE || ' ' || e.APELLIDO_PATERNO || ' ' || NVL(e.APELLIDO_MATERNO,'')) AS "NOMBRE COMPLETO", 
  e.SUELDO_BASE AS "SALARIO", 
  e.BONO_JEFATURA AS "BONIFICACION", 
  (e.SUELDO_BASE + e.BONO_JEFATURA) AS "SALARIO SIMULADO" 
FROM EMPLEADO e 
WHERE e.ACTIVO = 'S' AND e.BONO_JEFATURA IS NOT NULL 
ORDER BY "SALARIO SIMULADO" DESC, e.APELLIDO_PATERNO DESC;

SELECT 
  (e.NOMBRE || ' ' || e.APELLIDO_PATERNO || ' ' || NVL(e.APELLIDO_MATERNO,'')) AS "EMPLEADO", 
  e.SUELDO_BASE AS "SUELDO", 
  0.08 AS "POSIBLE AUMENTO", 
  (e.SUELDO_BASE * 1.08) AS "SALARIO SIMULADO" 
FROM EMPLEADO e 
WHERE e.SUELDO_BASE BETWEEN 550000 AND 800000 
ORDER BY e.SUELDO_BASE ASC;

